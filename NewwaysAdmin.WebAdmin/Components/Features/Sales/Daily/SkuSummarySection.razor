@namespace NewwaysAdmin.WebAdmin.Components.Features.Sales.Daily
@using NewwaysAdmin.OrderProcessor
@using System.Text.RegularExpressions

<div class="sku-summary">
    <h5>SKU SUMMARY:</h5>
    <div class="sku-table">
        <table class="table table-sm">
            <thead>
                <tr>
                    @foreach (var skuEntry in GetSortedSkus())
                    {
                        <th>@skuEntry.Key</th>
                    }
                    <th>Total Packs</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    @foreach (var skuEntry in GetSortedSkus())
                    {
                        <td>@skuEntry.Value packs</td>
                    }
                    <td>@ScanResult.SkuCounts.Values.Sum() packs</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter] public ScanResult ScanResult { get; set; } = null!;

    /// <summary>
    /// Returns the SKU counts dictionary sorted numerically by SKU number
    /// </summary>
    private IEnumerable<KeyValuePair<string, int>> GetSortedSkus()
    {
        if (ScanResult?.SkuCounts == null)
            return Enumerable.Empty<KeyValuePair<string, int>>();

        // Extract numeric part of SKU for sorting
        return ScanResult.SkuCounts
            .OrderBy(kv =>
            {
                // Extract numeric part from the SKU
                var match = Regex.Match(kv.Key, @"\d+");
                if (match.Success && int.TryParse(match.Value, out var skuNumber))
                    return skuNumber;

                // If no number found or parsing fails, return int.MaxValue to sort these last
                return int.MaxValue;
            });
    }
}